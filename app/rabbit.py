import json
import aio_pika
from loguru import logger
from app.config import Settings


settings = Settings()

RABBIT_URL = f"amqp://{settings.RABBIT_USER}:{settings.RABBIT_PASS}@{settings.RABBIT_HOST}/"

logger.add("rabbit.log", rotation="1 MB", encoding="utf-8")  # –ª–æ–≥ –≤ —Ñ–∞–π–ª


async def get_connection():
    logger.info(f"üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ RabbitMQ –ø–æ –∞–¥—Ä–µ—Å—É: {RABBIT_URL}")
    connection = await aio_pika.connect_robust(RABBIT_URL)
    logger.success("‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ RabbitMQ")
    return connection


async def publish_task(queue_name: str, data: dict):
    logger.info(f"üì§ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –∑–∞–¥–∞—á–∏ –≤ –æ—á–µ—Ä–µ–¥—å: {queue_name}")
    connection = await get_connection()
    async with connection:
        channel = await connection.channel()
        queue = await channel.declare_queue(queue_name, durable=True)
        await channel.default_exchange.publish(
            aio_pika.Message(body=json.dumps(data).encode()),
            routing_key=queue.name
        )
    logger.success("‚úÖ –ó–∞–¥–∞—á–∞ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞")


async def consume_tasks(queue_name: str, callback):
    logger.info(f"üì• –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Å—é–º–µ—Ä–∞ –¥–ª—è –æ—á–µ—Ä–µ–¥–∏: {queue_name}")
    connection = await get_connection()
    channel = await connection.channel()
    queue = await channel.declare_queue(queue_name, durable=True)

    async with queue.iterator() as queue_iter:
        logger.info("üöÄ –ì–æ—Ç–æ–≤ –∫ –ø—Ä–∏—ë–º—É –∑–∞–¥–∞—á...")
        async for message in queue_iter:
            async with message.process():
                try:
                    data = json.loads(message.body)
                    logger.info(
                        f"üì¶ –ü–æ–ª—É—á–µ–Ω–∞ –∑–∞–¥–∞—á–∞: {data.get('thread_id', '–±–µ–∑ ID')}")
                    await callback(data)
                    logger.success("‚úÖ –ó–∞–¥–∞—á–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞")
                except Exception as e:
                    logger.exception(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–¥–∞—á–∏: {e}")
